name: Publish to npm

on:
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (patch, minor, major)'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

permissions:
  contents: write

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          registry-url: 'https://registry.npmjs.org/'

      - name: Install dependencies
        run: npm install

      - name: Lint
        run: npm run lint

      - name: Test
        run: npm test

      - name: Build
        run: npm run build

      - name: Check and Publish (from release)
        if: github.event_name == 'release'
        run: |
          # Ensure clean working directory
          git status
          git reset --hard HEAD
          git clean -fd
          
          # Extract current version from package.json
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "Current version: ${CURRENT_VERSION}"
          
          # Check if this version already exists on npm
          HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" https://registry.npmjs.org/isbn-bisac-tools/${CURRENT_VERSION})
          
          if [ "$HTTP_STATUS" = "404" ]; then
            echo "Version ${CURRENT_VERSION} does not exist on npm. Publishing..."
            export HUSKY=0
            npm publish
          else
            echo "::warning::Version ${CURRENT_VERSION} already exists on npm. Please bump version before publishing."
            exit 0
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Version and Publish (manual)
        if: github.event_name == 'workflow_dispatch'
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          # Set up git to use the GitHub token for authentication
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
          
          # Ensure clean working directory
          git status
          git reset --hard HEAD
          git clean -fd
          
          # Bypass husky hooks in CI environment
          export HUSKY=0
          
          # Extract current version before bumping
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "Current version: ${CURRENT_VERSION}"
          
          # Check if current version exists on npm
          HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" https://registry.npmjs.org/isbn-bisac-tools/${CURRENT_VERSION})
          
          if [ "$HTTP_STATUS" != "404" ]; then
            echo "::warning::Version ${CURRENT_VERSION} already exists on npm."
            # Force bump to specified version type
            npm --no-git-tag-version version ${{ github.event.inputs.version }}
            # Get the new version after bump
            NEW_VERSION=$(node -p "require('./package.json').version")
            # Update changelog
            npm run changelog
            # Stage changes
            git add package.json package-lock.json CHANGELOG.md
            # Commit changes with conventional format
            git commit -m "chore(release): ${NEW_VERSION} [skip ci]"
            # Create tag
            git tag -a "v${NEW_VERSION}" -m "Release v${NEW_VERSION}"
          else
            # Version doesn't exist, regular bump
            echo "Version ${CURRENT_VERSION} does not exist on npm."
            npm version ${{ github.event.inputs.version }} -m "chore(release): %s [skip ci]"
            NEW_VERSION=$(node -p "require('./package.json').version")
          fi
          
          # Publish the version
          echo "Publishing version ${NEW_VERSION}..."
          npm publish
          
          # Push changes
          git push origin HEAD:${GITHUB_REF#refs/heads/}
          git push --tags
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}